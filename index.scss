@import "foundation";
$breakpoints: map-merge($breakpoints, (large: 1025px));

$border-color: mediumseagreen;
$inner-border: 5px solid $border-color;
$red: red;
$white: ivory;
$space-color: green;
$background-color: lightgray;

body {
    background-color: $background-color;
}

#board {
    border: 10px solid $border-color;
    
    #home {
        border-right: $inner-border;
        
        @include grid-size(1.5);
        
        h4 {
            margin-left: auto;
            margin-right: auto;
            margin-top: 0.7rem;
            margin-bottom: 0;
        }
        
        #top-home {
            border-bottom: $inner-border;
        }
        
        #bottom-home {
            border-top: $inner-border;
        }
    }
    
    #spaces {
        border-left: $inner-border;

        #bar {
            background-color: $border-color;
            
            .button {
                padding: .85em .5em;
            }
        }
    }

}

.grid-frame {
    min-height: 313px;
}

#left-message-area {
    @include hide-for(small);
    @include show-for(large);
}

#right-message-area {
    @include show-for(small);
    @include hide-for(large);
    border: 2px solid $border-color;
    background-color: lighten($border-color, 30%);
}
.message-area {
    padding: .15em;
}

@mixin fill-object($object, $color) {
    #{$object} {
        fill: $color;
    }
}


@mixin piece-classes($name, $primary-color, $secondary-color) {
    $dark-primary-color: darken($primary-color, 25%);

    @keyframes unavailable-#{$name}-piece {
        0% {
            fill: $dark-primary-color;
        }
        
        100% {
            fill: $primary-color;
        }
    }
    
    
    .#{$name} .piece, .#{$name}.piece {
        @include fill-object("circle", $primary-color);
        @include fill-object("text", $secondary-color);
        &.selectable.selected {
            @include fill-object("circle", $dark-primary-color);
        }
    }
    
    .#{$name}.unavailable .piece.selectable circle, .#{$name}.unavailable.piece.selectable circle {
        animation-duration: .6s;
        animation-name: unavailable-#{$name}-piece;
        animation-timing-function: step-end;
    }
    
    .#{$name}:hover:not(.winning) .piece.selectable, .#{$name}.piece.selectable:hover {
        cursor: pointer;
        @include fill-object("circle", $dark-primary-color);
    }
    
    ad-dice.#{$name}, div {
        span.dice, button {
            color: $secondary-color;
            background-color: $primary-color;
            
            &:hover:not(.dice), &:focus:not(.dice) {
                color: $secondary-color;
                background-color: $dark-primary-color;
                outline-color: $secondary-color;
            }
        }
    }
    
    p .#{$name}, p.#{$name} {   
        color: $primary-color;
    }
}

@include piece-classes("white", $white, $red);
@include piece-classes("red", $red, $white);

@keyframes unavailable-ad-circle {
    25% {
        margin-left: 2%;
    }
    
    50% {
        margin-left: 0;
    }
    
    75% {
        margin-right: 2%;
    }
    
    100% {
        margin-right: 0;
    }
}

ad-circle.unavailable .piece.selectable {
    animation-duration: .1s;
    animation-name: unavailable-ad-circle;
    animation-iteration-count: 6;
    animation-timing-function: linear;
}
@keyframes unavailable-g-piece-top {
    25% {
        transform: scale(.75) translate(15px, -105px);
    }
    
    50% {
        transform: scale(.75) translate(17px, -105px);
    }
    
    75% {
        transform: scale(.75) translate(19px, -105px);
    }
    
    100% {
        transform: scale(.75) translate(17px, -105px);
    }
}
@keyframes unavailable-g-piece-bottom {
    25% {
        transform: scale(.75) translate(15px, 220px);
    }
    
    50% {
        transform: scale(.75) translate(17px, 220px);
    }
    
    75% {
        transform: scale(.75) translate(19px, 220px);
    }
    
    100% {
        transform: scale(.75) translate(17px, 220px);
    }
}

g.unavailable.piece.selectable {
    ad-space.top & {
        transform: scale(.75) translate(17px, -105px);
        animation-name: unavailable-g-piece-top;
    }
    
    ad-space.bottom & {
        transform: scale(.75) translate(17px, 220px);
        animation-name: unavailable-g-piece-bottom;
    }
    animation-duration: .1s;
    animation-iteration-count: 6;
    animation-timing-function: linear;
}

.piece {
    cursor: default;
    
    #home & {
        @include breakpoint(small) {
            height: 55%;
            width: 55%;
        }
        @include breakpoint(large) {
            height: 100%;
            width: 50%;
        }
    }
    
    #bar & {
        @include breakpoint(small) {
            width: 80%;
            height: 45%;
        }
        @include breakpoint(large) {
            width: 80%;
            height: 20%;
        }
    }
}

ad-space {
    @include grid-block(2);
    
    &.top {
        margin-bottom: auto;
    }

    &.bottom {
        margin-top: auto;
    }
    
    svg.space {
        width: 100%;
        height: 100%;
        polygon {
            fill: $space-color;         
        }
    }
}

.dice {
    @include badge (
        $diameter: 3rem,
        $fontsize: 1.5rem
    );
    border-radius: 15%;
    cursor: default;
}

.unusable {
    $opacity: .35;
    opacity: $opacity;
    cursor: default;
    
    &.space {
        opacity: 1;
        polygon {
            fill: transparentize($space-color, 1 - $opacity);
        }
    }
}

.winner {
    font-weight: bold;
    font-size: 4rem;
}